html {
  height: 100%;
  width: 100%;
}

/*12 span grid*/
.layout {
  border: 2px solid black;
  display: grid;
  grid: "span12 span12 span12 span12 span12 span12 span12 span12 span12 span12 span12 span12" 1fr "span6 span6 span6 span6 span6 span6 . . . . . . " 1fr ". . . . . span3 span3 span3 . . . ." 1fr ". . . . span1 . . . . . . ." 1fr / 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  gap: 8px;
}

.span12 {
  grid-area: span12;
  background-color: gray;
}

.span6 {
  grid-area: span6;
  background-color: gray;
}

.span3 {
  grid-area: span3;
  background-color: gray;
}

.span1 {
  grid-area: span1;
  background-color: gray;
}

/*3X3*/
.layout2 {
  width: 90%;
  height: 300px;
  display: grid;
  grid-template-rows: repeat(3, 1fr);
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
  border: 2px solid black;
}

.x3 {
  border: 1px solid black;
  background-color: #a6dddd;
}

/*Holy Grail*/
.layout3 {
  border: 2px solid black;
  width: 99%;
  height: 300px;
  display: grid;
  grid: "header header header" auto "leftSide body rightSide" 1fr "footer footer footer" auto / auto 1fr auto;
  gap: 8px;
}

.header {
  grid-area: header;
  background-color: teal;
}

.leftSide {
  grid-area: leftSide;
  background-color: #7f7ece;
}

.body {
  grid-area: body;
  background-color: #008009;
}

.rightSide {
  grid-area: rightSide;
  background-color: #7f7ece;
}

.footer {
  grid-area: footer;
  background-color: teal;
}

/*Sidebar*/
.layout4 {
  border: 2px solid black;
  width: 99%;
  height: 300px;
  display: grid;
  grid: "sidebar body1" 1fr / auto 1fr;
  gap: 8px;
}

.sidebar {
  grid-area: sidebar;
  background-color: #ce7e7e;
}

.body1 {
  grid-area: body1;
  background-color: #008009;
}

/*Header main footer*/
.layout5 {
  border: 2px solid black;
  width: 99%;
  height: 300px;
  display: grid;
  grid: "header1" auto "main" 1fr "footer1" auto / 1fr;
  gap: 8px;
}

.header1 {
  grid-area: header1;
  background-color: lavender;
}

.main {
  grid-area: main;
  background-color: #697656;
}

.footer1 {
  grid-area: footer1;
  background-color: lavender;
}

/*Infinite Rows*/
.layout6 {
  border: 2px solid #354140;
  width: 99%;
  height: 300px;
  display: grid;
  grid-template-rows: repeat(auto-fit, 1fr);
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
}

.infy {
  border: 1px solid black;
  background-color: #7db581;
}

/*Infinite Rows with areas*/
.layout7 {
  border: 2x solid #515729;
  width: 100%;
  display: grid;
  grid-template-rows: repeat(auto-fit, 1fr);
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
}

.col1Last1 {
  grid-column: 1 / -1;
  background-color: chocolate;

}

/*Flexbox Rows*/
.layout8 {
  border: 2px solid #5c6714;
  width: 100%;
  display: flex;
  gap: 16px;

}

.flRow {
  border: 1px solid #4c7394;
  background-color: #aeafd6;
}

/*Flexbox Row Wrap*/
.layout9 {
  border: 2px solid grey;
  display: flex;
  gap: 16px;
  flex-direction: row;
  flex-wrap: wrap;

}

/*Flexbox filling the space*/
.layout10 {
  border: 2px solid #141e66;
  width: 100%;
  display: flex;
  gap: 16px;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;

}

.grow1 {
  border: 1px solid #7878a1;
  background-color: #aeafd6;
  flex-grow: 1;
}

/*Flexbox fit to remaining space*/
.layout11 {
  border: 2px solid #025f02;
  display: flex;
  gap: 16px;

}

/*Flexbox separate*/
.layout12 {
  border: 2px solid #5c6714;
  display: flex;
  gap: 16px;
}

.marginLeft {
  border: 1px solid black;
  margin-left: auto;
  background-color: #859cd1;
}

.layout13 {
  border: 2px solid #8f70bd;
  background-color: #98b9b6;
  display: grid;
  grid-template-rows: repeat(auto-fit, 1fr);
  grid-template-columns: repeat(5, 1fr);
  gap: 6px;
}

.wrap1 {
  border: 1px solid black;
  background-color: #b8b8b8;
  flex-basis: 100%;
}

/*Animations*/
/*Translate*/
.translate {
  width: 300px;
  height: 100px;
  background-color: #995233;
  border: 1px solid black;
  transform: translate(50px, 10px);


}

.translatbg {
  width: 300px;
  height: 100px;
  background-color: #995233;
  border: 1px solid black;
}

/*Rotate*/
.rotatebg {
  width: 300px;
  height: 100px;
  background-color: #339977;
  border: 1px solid black;

}

.rotate {
  width: 300px;
  height: 100px;
  background-color: #339977;
  border: 1px solid black;

}

#myDiv {
  transform: rotate(20deg);
}

/*Scale*/
.scale {
  width: 300px;
  height: 100px;
  background-color: rebeccapurple;
  border: 1px solid black;
  margin: 100px;
  transform: scale(2, 3);
}

/*ScaleX*/
.scaleX {
  width: 300px;
  height: 100px;
  background-color: rebeccapurple;
  border: 1px solid black;
  margin: 100px;
  transform: scaleX(2);
}

/*ScaleY*/
.scaleY {
  width: 300px;
  height: 100px;
  background-color: rebeccapurple;
  border: 1px solid black;
  margin: 100px;
  transform: scaleY(3);
}

.scalebg {
  width: 300px;
  height: 100px;
  background-color: rebeccapurple;
  border: 1px solid black;
  margin: 100px;
}

/*Skew*/
.skew {
  width: 300px;
  height: 100px;
  background-color: #df4949;
  border: 1px solid black;
  transform: skew(10deg, 10deg);
}

/*SkewX*/
.skewX {
  width: 300px;
  height: 100px;
  background-color: #df4949;
  border: 1px solid black;
  transform: skewX(20deg);
}

/*SkewY*/
.skewY {
  width: 300px;
  height: 100px;
  background-color: #df4949;
  border: 1px solid black;
  transform: skewY(20deg);
}

.bgSkew {
  width: 300px;
  height: 100px;
  background-color: #df4949;
  border: 1px solid black;

}

/*Matrix*/
.matrixbg {
  width: 300px;
  height: 100px;
  background-color: #49df91;
  border: 1px solid black;
}

/*Matrix(scaleX, skewY, skewX, scaleY, translateX, translateY)*/
#matrix {
  width: 300px;
  height: 100px;
  background-color: #49df91;
  border: 1px solid black;
  transform: matrix(1, -0.3, 0, 1, 0, 0);
}

#matrix2D {
  width: 300px;
  height: 100px;
  background-color: #49df91;
  border: 1px solid black;
  transform: matrix(1, 0, 0.5, 1, 150, 0);
}

#twoD {
  border: 3px dashed #c7d6f4;
  background-color: lavender;
}

.rota {
  width: 300px;
  height: 100px;
  background-color: #fdd3f0;
  border: 1px solid black;

}

/*Rotate in 3D X-axis*/
#rotate3DX {
  transform: rotateX(150deg);
}

/*Rotate in 3D Y-axis*/
#rotate3DY {
  transform: rotateY(150deg);
}

/*Rotate in 3D Z-axis*/
#rotate3DZ {
  transform: rotateZ(90deg);
  width: 200px;
}

/*animate it .rota:hover {
      transform: rotate3d(1,1,1, 180deg);
      transform: translate3d(20px,20px,20px);}*/

/*Transitions*/
/*To decorate a div*/
.perry {
  width: 100px;
  height: 100px;
  background-color: #b9c0d0;
  border: 1px solid black;
  transition: width 2s, height 1s, background-color 3s;
}

#transition:hover {
  width: 200px;
  height: 200px;
  background-color: #94db99;
}

/*Lineart*/
#linear:hover {
  width: 200px;
  height: 200px;
  background-color: #94db99;
  transition-timing-function: linear;
}

/*Ease*/
#ease:hover {
   width: 200px;
  height: 200px;
  background-color: #94db99;
  transition-timing-function: ease;
}

/*Ease In*/
#easeIn:hover {
   width: 200px;
  height: 200px;
  background-color: #9994db;
  transition-timing-function: ease-in;
}

/*Ease Out*/
#easeOut:hover {
   width: 200px;
  height: 200px;
  background-color: #9496db;
  transition-timing-function: ease-out;
}

/*Ease In Out*/
#easeInOut:hover {
   width: 200px;
  height: 200px;
  background-color: #9994db;
  transition-timing-function: ease-in-out;
  transition-delay: 1s;
}

/*Animations*/
/*@Keyframes
animation name
animation duration
animation-delay
animation-iteration-count
animation-direction
animation-timing function
animation-fill-mode
animation*/

/*The animation code*/
@keyframes example{
  from{background-color: #9994db; width:100px;}
  to{background-color: #99db94; width:300px;}
}
/*The element to apply animation to*/
.cheezeCake{
  width: 100px;
  height: 100px;
  background-color: #94b3db;
  animation-name: example;
  animation-duration: 8s;
}
/*animation code*/
@keyframes example2{
  25%{background-color: #dbcc94; width:100px; left: 20px; top: 20px;}
  50%{background-color: #db94b6; width:300px; down: 10px; right: 10px;}
  100%{background-color: #94dbc6; width:100px; top: 10px; left: 10px; down: 5px; right: 5px; }
}
/*Element animation was applieed to, Background position*/
.baked{
  width: 100px;
  height: 100px;
  background-color: #94dbb6;
  animation-name: example2;
  animation-duration: 7s;
  position: relative;
  animation-timing-function: linear;
  animation-delay: 1s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-fill-mode: forwards;
}
/*duration and Delay*/
.strawberryCake{
  width: 100px;
  height: 100px;
  background-color: #f4b3d9;
  animation-name: example2;
  animation-duration: 7s;
  position: relative;
  animation-delay: 5s;
}
@keyframes example3{
  from{background-image:linear-gradient( to right, #f4b3d9, #94dbb6); width:100px; left: 20px;}
  to{background-image:linear-gradient(to left, #bc5c83, #60af9f); width:300px; left: 20px;}
}
/*Iteration count*/
.lemonLime{
  width: 100px;
  height: 100px;
  background-color: #94dbb6;
  animation-name: example3;
  animation-duration: 7s;
  position: relative;
  animation-iteration-count: infinite;
  animation-delay: 1s;
}
/*Direction*/
.staryNight{
  width: 100px;
  height: 100px;
  background-color: #94dbb6;
  animation-name: example3;
  animation-duration: 9s;
  position: relative;
  animation-delay: 1s;
  animation-iteration-count: infinite;
  animation-direction: alternate-reverse;
}
/*Timing-Function*/
.caveDweller{
  width: 100px;
  height: 100px;
  background-color: #94dbb6;
  animation-name: example;
  animation-duration: 7s;
  position: relative;
  animation-timing-function: ease-out;
  animation-delay: 1s;
  animation-iteration-count: 2;
  animation-direction: alternate;
}
/*Fill mode*/
.bomb{
  width: 100px;
  height: 100px;
  background-color: #94dbb6;
  animation-name: example;
  animation-duration: 7s;
  position: relative;
  animation-timing-function: linear;
  animation-delay: 1s;
  animation-iteration-count: 3;
  animation-direction: alternate;
  animation-fill-mode: both;
}
  /*animation*/
.finale{
  width: 100px;
  height: 100px;
  background-color: #94dbb6;
 animation: example3 10s ease-in 1s infinite alternate;
}
